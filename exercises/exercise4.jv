pipeline TemperaturePipeline {
    TemperatureZipExtractor 
        -> TemperatureZipArchiveInterpreter
        -> TemperatureFilePicker
        -> TemperatureTextFileInterpreter
        -> TemperatureCSVInterpreter
        -> TemperatureColDataSelector
        -> TemperatureColumnDeleter
        -> TemperatureTableInterpreter
        -> CelsiusToFahrenheitTemperatur
        -> CelsiusToFahrenheitBatterietemperatur
        -> TemperatureSQLloader;

    block TemperatureZipExtractor oftype HttpExtractor {
        url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
    }

    block TemperatureZipArchiveInterpreter oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    block TemperatureFilePicker oftype FilePicker {
        path: "/data.csv";
    }

    block TemperatureTextFileInterpreter oftype TextFileInterpreter {

    }

    block TemperatureCSVInterpreter oftype CSVInterpreter   {
    delimiter: ";";
    }

    block TemperatureColumnDeleter oftype ColumnDeleter {
        delete: [column F, column G, column H, column I];
    }

    block TemperatureColDataSelector oftype CellRangeSelector   {
        select: range A1:K*;
    }

    block TemperatureTableInterpreter oftype TableInterpreter    {
        header: false;
        columns: [
            "Geraet" oftype ValidGeraet,
            "Hersteller" oftype text,
            "Model" oftype text,
            "Monat" oftype Month,
            "Temperatur" oftype decimal,
            "Batterietemperatur" oftype decimal,
            "Geraet aktiv" oftype Geraet_aktiv
        ];
    }


    block CelsiusToFahrenheitTemperatur oftype TableTransformer {
    inputColumns: ['Temperatur'];
    outputColumn: 'Temperatur';
    use: CelsiusToFahrenheit;
    }

    block CelsiusToFahrenheitBatterietemperatur oftype TableTransformer {
    inputColumns: ['Batterietemperatur'];
    outputColumn: 'Batterietemperatur';
    use: CelsiusToFahrenheit;
    }

    block TemperatureSQLloader oftype SQLiteLoader{
        table: 'temperatures';
        file: 'temperatures.sqlite';
    }
}


valuetype Geraet_aktiv oftype text {
    constraints: [
        Geraet_aktivAllowList,
    ];
}

constraint Geraet_aktivAllowList oftype AllowlistConstraint  {
    allowlist: ["Ja", "Nein"];
}

valuetype Month oftype integer  {
    constraints: [
        MonthRange,
    ];
}

constraint MonthRange oftype RangeConstraint {
    lowerBound: 1;
    upperBound: 12;
}

valuetype ValidGeraet oftype integer {
    constraints: [
        GreaterthanZero,
    ];
}

constraint GreaterthanZero oftype RangeConstraint {
    lowerBound: 0;
    lowerBoundInclusive: true;
}

transform CelsiusToFahrenheit   {
    from Celsius oftype decimal;
    to Fahrenheit oftype decimal;
    Fahrenheit: (Celsius * 9/5) + 32;
}